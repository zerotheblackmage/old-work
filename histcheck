#!/usr/bin/env python3.5

import sqlite3
import argparse
import os
import datetime
import re
from shutil import copyfile


# argument parsing variable
parser = argparse.ArgumentParser()
parser.add_argument("username", type=str, help="process just a single user, use all for everyone in the company")
args = parser.parse_args()
users_ret = args.username
users = []


def getusers():
    raw = os.subprocess.check_output("getent passwd", shell=True)
    line = str(raw).split(":")
    for s in line:
        if s.startswith("/home"):
            users.append(str(s)[6:])
    users.sort()


def gethis(user, browser):

    if browser == "firefox":
        fold = "/nas_homes/{}/.mozilla/firefox".format(user)
        print(fold)
        for f in os.listdir(fold):
            if f.endswith("User"):
                profilename = f
                orig = fold + "/" + profilename + "/places.sqlite"
                print(orig)
                snap = orig + ".snap"
    else:
        orig = "/nas_homes/{}/.config/{}/Default/History".format(user, browser)
        snap = orig + ".snap"

    try:
        copyfile(orig, snap)
        conn = sqlite3.connect(snap)
        c = conn.cursor()
        if browser == "firefox":
            c.execute("SELECT datetime(a.visit_date/1000000,'unixepoch') AS visit_date, b.url FROM moz_historyvisits AS a JOIN moz_places AS b ON a.place_id=b.id WHERE 1 ORDER BY a.visit_date ASC;")
        else:
            c.execute('SELECT * FROM urls WHERE 1;')
        all_rows = c.fetchall()
        ind = 0
        filename = "{}-{}-{}.csv".format(user, browser, ind)
        if os.path.exists(filename):
            append_write = 'a'  # append if already exists
        else:
            append_write = 'w'  # make a new file if not

        history = open(filename, append_write)
        for i, entry in enumerate(all_rows):

            if browser == "firefox":
                history.write( "{}, {} \n".format(entry[0], entry[1]))
            else:
                secs = int(entry[5])
                stamp = datetime.datetime(1601, 1, 1) + datetime.timedelta(microseconds=secs)
                stamp = str(stamp).split(".")
                urls = str(entry[1])
                pagename = re.sub('[^A-Za-z0-9\s.@]+', '', str(entry[2]))
                history.write("{} UTC , {} , {} , end \n".format(str(stamp[0]), pagename, urls))

        history.close()
    except IOError as e:
        print("an error has occurred:" + str(e))

if str(users_ret) == "all":
    getusers()
else:
    users.append(users_ret)

for u in users:
    for br in ["firefox", "chromium", "google-chrome"]:
        gethis(u, br)
